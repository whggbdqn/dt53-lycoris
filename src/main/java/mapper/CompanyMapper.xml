<?xml version="1.0" encoding="UTF-8" ?>
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN" "http://mybatis.org/dtd/mybatis-3-mapper.dtd" >
<mapper namespace="dao.CompanyMapper" >
  <resultMap id="BaseResultMap" type="entity.Company" >
    <id column="id" property="id" jdbcType="INTEGER" />
    <result column="companyname" property="companyname" jdbcType="VARCHAR" />
    <result column="companyemail" property="companyemail" jdbcType="VARCHAR" />
    <result column="idarea" property="idarea" jdbcType="INTEGER" />
    <result column="updatetime" property="updatetime" jdbcType="VARCHAR" />
  </resultMap>
  <resultMap id="ResultMapWithBLOBs" type="entity.Company" extends="BaseResultMap" >
    <result column="companyinfo" property="companyinfo" jdbcType="LONGVARCHAR" />
  </resultMap>
  <sql id="Base_Column_List" >
    id, companyname, companyemail, idarea,updatetime
  </sql>
  <sql id="Blob_Column_List" >
    companyinfo
  </sql>
  <select id="selectByPrimaryKey" resultMap="ResultMapWithBLOBs" parameterType="java.lang.Integer" >
    select 
    <include refid="Base_Column_List" />
    ,
    <include refid="Blob_Column_List" />
    from company
    where id = #{id,jdbcType=INTEGER}
  </select>
  <delete id="deleteByPrimaryKey" parameterType="java.lang.Integer" >
    delete from company
    where id = #{id,jdbcType=INTEGER}
  </delete>
  <insert id="insert" parameterType="entity.Company" >
    insert into company (id, companyname, companyemail, 
      idarea, companyinfo)
    values (#{id,jdbcType=INTEGER}, #{companyname,jdbcType=VARCHAR}, #{companyemail,jdbcType=VARCHAR}, 
      #{idarea,jdbcType=INTEGER}, #{companyinfo,jdbcType=LONGVARCHAR})
  </insert>
  <insert id="insertSelective" parameterType="entity.Company" >
    insert into company
    <trim prefix="(" suffix=")" suffixOverrides="," >
      <if test="id != null" >
        id,
      </if>
      <if test="companyname != null" >
        companyname,
      </if>
      <if test="companyemail != null" >
        companyemail,
      </if>
      <if test="idarea != null" >
        idarea,
      </if>
      <if test="companyinfo != null" >
        companyinfo,
      </if>
    </trim>
    <trim prefix="values (" suffix=")" suffixOverrides="," >
      <if test="id != null" >
        #{id,jdbcType=INTEGER},
      </if>
      <if test="companyname != null" >
        #{companyname,jdbcType=VARCHAR},
      </if>
      <if test="companyemail != null" >
        #{companyemail,jdbcType=VARCHAR},
      </if>
      <if test="idarea != null" >
        #{idarea,jdbcType=INTEGER},
      </if>
      <if test="companyinfo != null" >
        #{companyinfo,jdbcType=LONGVARCHAR},
      </if>
    </trim>
  </insert>
  <update id="updateByPrimaryKeySelective" parameterType="entity.Company" >
    update company
    <set >
      <if test="companyname != null" >
        companyname = #{companyname,jdbcType=VARCHAR},
      </if>
      <if test="companyemail != null" >
        companyemail = #{companyemail,jdbcType=VARCHAR},
      </if>
      <if test="idarea != null" >
        idarea = #{idarea,jdbcType=INTEGER},
      </if>
      <if test="companyinfo != null" >
        companyinfo = #{companyinfo,jdbcType=LONGVARCHAR},
      </if>
       <if test="updatetime != null" >
        updatetime = #{updatetime,jdbcType=LONGVARCHAR},
      </if>
    </set>
    where id = #{id,jdbcType=INTEGER}
  </update>
  <update id="updateByPrimaryKeyWithBLOBs" parameterType="entity.Company" >
    update company
    set companyname = #{companyname,jdbcType=VARCHAR},
      companyemail = #{companyemail,jdbcType=VARCHAR},
      idarea = #{idarea,jdbcType=INTEGER},
      companyinfo = #{companyinfo,jdbcType=LONGVARCHAR}
    where id = #{id,jdbcType=INTEGER}
  </update>
  <update id="updateByPrimaryKey" parameterType="entity.Company" >
    update company
    set companyname = #{companyname,jdbcType=VARCHAR},
      companyemail = #{companyemail,jdbcType=VARCHAR},
      idarea = #{idarea,jdbcType=INTEGER}
    where id = #{id,jdbcType=INTEGER}
  </update>
  <select id="checkCompanyName" resultType="int" parameterType="String">
  	select IFNULL(MAX(id),0) AS  id from company where companyname like #{companyName}
  </select>
  <!--   查询地区有多少家公司  -->
  <select id="getAllAreabyCompany" resultType="entity.AreatoCompany">
  SELECT  a.`areainfo` as name,COUNT(2) AS value FROM company AS c 
LEFT JOIN AREA AS a ON c.`idarea`=a.`id`
GROUP BY idarea
  </select> 
  <update id="setTime" parameterType="String">
  	update company set updatetime=#{time} where updatetime is null
  </update>
</mapper>