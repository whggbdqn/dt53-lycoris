<?xml version="1.0" encoding="UTF-8" ?>
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN" "http://mybatis.org/dtd/mybatis-3-mapper.dtd" >
<mapper namespace="dao.UserMapper" >

<select id="getAllUserPartInfo" resultType="entity.User">
    select userID,username,password from user
</select>

  <resultMap id="BaseResultMap" type="entity.User" >
    <id column="id" property="id" jdbcType="INTEGER" />
    <result column="userID" property="userid" jdbcType="VARCHAR" />
    <result column="username" property="username" jdbcType="VARCHAR" />
    <result column="password" property="password" jdbcType="VARCHAR" />
    <result column="email" property="email" jdbcType="VARCHAR" />
    <result column="tel" property="tel" jdbcType="VARCHAR" />
    <result column="userlevel" property="userlevel" jdbcType="INTEGER" />
    <result column="picture" property="picture" jdbcType="VARCHAR" />
    <result column="idarea" property="idarea" jdbcType="INTEGER" />
    <result column="idgrade" property="idgrade" jdbcType="INTEGER" />
     <collection property="company"  ofType="entity.Company">
	  <id column="id" property="id" jdbcType="INTEGER" />
	    <result column="companyname" property="companyname" jdbcType="VARCHAR" />
	    <result column="companyemail" property="companyemail" jdbcType="VARCHAR" />
	    <result column="idarea" property="idarea" jdbcType="INTEGER" />
	    <result column="companyinfo" property="companyinfo" jdbcType="LONGVARCHAR" />
	  </collection>
  </resultMap>
  
  <sql id="Base_Column_List" >
    id, userID, username, password, email, tel, userlevel, picture, idarea, idgrade
  </sql>
  <!-- 用户查单挑 -->
   <select id="getUserMessage" resultType="entity.User"> 
  		SELECT * FROM USER WHERE user.`id`=#{id}
  </select>
 <!--查询所有用戶  -->
	 <select id="getAllUser" resultMap="BaseResultMap">
		 select id, userID, username, password, email, tel, userlevel, picture, idarea, idgrade
		  from user
	 </select>
	
	<!--查詢用戶收藏的所以公司  -->
	<select id="getAllCompanyByUser" resultMap="BaseResultMap" parameterType="java.lang.Integer">
	SELECT * FROM usertocompany AS a LEFT JOIN USER AS b ON a.`iduser`=b.`id`
				 LEFT JOIN company AS c ON a.`idcompany`=c.`id`
				 WHERE b.`id`=#{id,jdbcType=INTEGER}
	</select>
 
  <select id="selectByPrimaryKey" resultMap="BaseResultMap" parameterType="java.lang.Integer" >
    select 
    <include refid="Base_Column_List" />
    from user
    where id = #{id,jdbcType=INTEGER}
  </select>
  <delete id="deleteByPrimaryKey" parameterType="java.lang.Integer" >
    delete from user
    where id = #{id,jdbcType=INTEGER}
  </delete>
  <insert id="insert" parameterType="entity.User" >
    insert into user (id, userID, username, 
      password, email, tel, 
      userlevel, picture, idarea, 
      idgrade)
    values (#{id,jdbcType=INTEGER}, #{userid,jdbcType=VARCHAR}, #{username,jdbcType=VARCHAR}, 
      #{password,jdbcType=VARCHAR}, #{email,jdbcType=VARCHAR}, #{tel,jdbcType=VARCHAR}, 
      #{userlevel,jdbcType=INTEGER}, #{picture,jdbcType=VARCHAR}, #{idarea,jdbcType=INTEGER}, 
      #{idgrade,jdbcType=INTEGER})
  </insert>
  <insert id="insertSelective" parameterType="entity.User" >
    insert into user
    <trim prefix="(" suffix=")" suffixOverrides="," >
      <if test="id != null" >
        id,
      </if>
      <if test="userid != null" >
        userID,
      </if>
      <if test="username != null" >
        username,
      </if>
      <if test="password != null" >
        password,
      </if>
      <if test="email != null" >
        email,
      </if>
      <if test="tel != null" >
        tel,
      </if>
      <if test="userlevel != null" >
        userlevel,
      </if>
      <if test="picture != null" >
        picture,
      </if>
      <if test="idarea != null" >
        idarea,
      </if>
      <if test="idgrade != null" >
        idgrade,
      </if>
    </trim>
    <trim prefix="values (" suffix=")" suffixOverrides="," >
      <if test="id != null" >
        #{id,jdbcType=INTEGER},
      </if>
      <if test="userid != null" >
        #{userid,jdbcType=VARCHAR},
      </if>
      <if test="username != null" >
        #{username,jdbcType=VARCHAR},
      </if>
      <if test="password != null" >
        #{password,jdbcType=VARCHAR},
      </if>
      <if test="email != null" >
        #{email,jdbcType=VARCHAR},
      </if>
      <if test="tel != null" >
        #{tel,jdbcType=VARCHAR},
      </if>
      <if test="userlevel != null" >
        #{userlevel,jdbcType=INTEGER},
      </if>
      <if test="picture != null" >
        #{picture,jdbcType=VARCHAR},
      </if>
      <if test="idarea != null" >
        #{idarea,jdbcType=INTEGER},
      </if>
      <if test="idgrade != null" >
        #{idgrade,jdbcType=INTEGER},
      </if>
    </trim>
  </insert>
  <update id="updateByPrimaryKeySelective" parameterType="entity.User" >
    update user
    <set >
      <if test="userid != null" >
        userID = #{userid,jdbcType=VARCHAR},
      </if>
      <if test="username != null" >
        username = #{username,jdbcType=VARCHAR},
      </if>
      <if test="password != null" >
        password = #{password,jdbcType=VARCHAR},
      </if>
      <if test="email != null" >
        email = #{email,jdbcType=VARCHAR},
      </if>
      <if test="tel != null" >
        tel = #{tel,jdbcType=VARCHAR},
      </if>
      <if test="userlevel != null" >
        userlevel = #{userlevel,jdbcType=INTEGER},
      </if>
      <if test="picture != null" >
        picture = #{picture,jdbcType=VARCHAR},
      </if>
      <if test="idarea != null" >
        idarea = #{idarea,jdbcType=INTEGER},
      </if>
      <if test="idgrade != null" >
        idgrade = #{idgrade,jdbcType=INTEGER},
      </if>
    </set>
    where id = #{id,jdbcType=INTEGER}
  </update>
  <update id="updateByPrimaryKey" parameterType="entity.User" >
    update user
    set userID = #{userid,jdbcType=VARCHAR},
      username = #{username,jdbcType=VARCHAR},
      password = #{password,jdbcType=VARCHAR},
      email = #{email,jdbcType=VARCHAR},
      tel = #{tel,jdbcType=VARCHAR},
      userlevel = #{userlevel,jdbcType=INTEGER},
      picture = #{picture,jdbcType=VARCHAR},
      idarea = #{idarea,jdbcType=INTEGER},
      idgrade = #{idgrade,jdbcType=INTEGER}
    where id = #{id,jdbcType=INTEGER}
  </update>
</mapper>